"""add fk keys

Revision ID: 9cd2069e75b3
Revises: 5bd1e81210f9
Create Date: 2016-01-29 11:27:57.119363

"""

# revision identifiers, used by Alembic.
revision = '9cd2069e75b3'
down_revision = '5bd1e81210f9'

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

def upgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.create_table('user_invite',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('invited_by_user_id', sa.Integer(), nullable=False),
    sa.Column('token', sa.String(length=100), server_default='', nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['invited_by_user_id'], ['user.id'], name='fk_user_invitation_invited_by_user'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email', name='ux_user_invite_email'),
    sa.UniqueConstraint('token', name='ux_user_invite_token')
    )
    op.drop_table('user_invitation')
    op.create_unique_constraint('ix_ad_asin', 'ad', ['asin'])
    op.drop_constraint(u'ux_ad_asin', 'ad', type_='unique')
    op.create_unique_constraint('ux_issue_topic_serial', 'issue', ['topic_id', 'serial'])
    op.drop_constraint(u'ux_topic_serial', 'issue', type_='unique')
    op.create_foreign_key('fk_issue_topic', 'issue', 'topic', ['topic_id'], ['id'])
    op.create_foreign_key('fk_issue_user', 'issue', 'user', ['user_id'], ['id'])
    op.create_index('ix_issue', 'link', ['issue_id'], unique=False)
    op.create_foreign_key('fk_link_issue', 'link', 'issue', ['issue_id'], ['id'])
    op.create_foreign_key('fk_link_user', 'link', 'user', ['user_id'], ['id'])
    op.alter_column('link_ad', 'ad_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('link_ad', 'link_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_link_weight', table_name='link_ad')
    op.drop_constraint(u'ux_link_ad', 'link_ad', type_='unique')
    op.create_foreign_key(None, 'link_ad', 'ad', ['ad_id'], ['id'])
    op.create_foreign_key(None, 'link_ad', 'link', ['link_id'], ['id'])
    op.drop_column('link_ad', 'id')
    op.drop_column('link_ad', 'weight')
    op.alter_column('link_tag', 'link_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('link_tag', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.drop_index('ix_link', table_name='link_tag')
    op.drop_constraint(u'ux_link_tag', 'link_tag', type_='unique')
    op.create_foreign_key(None, 'link_tag', 'tag', ['tag_id'], ['id'])
    op.create_foreign_key(None, 'link_tag', 'link', ['link_id'], ['id'])
    op.drop_column('link_tag', 'id')
    op.drop_column('link_tag', 'weight')
    op.create_foreign_key('fk_topic_user', 'topic', 'user', ['user_id'], ['id'])
    op.create_unique_constraint('ux_topic_follow_user_follow_topic', 'topic_follow', ['topic_id', 'user_id'])
    op.drop_constraint(u'ux_user_follow_topic', 'topic_follow', type_='unique')
    op.create_foreign_key('fk_topic_follow_topic', 'topic_follow', 'topic', ['topic_id'], ['id'])
    op.create_foreign_key('fk_topic_follow_user', 'topic_follow', 'user', ['user_id'], ['id'])
    op.create_unique_constraint('ux_user_auth_token', 'user', ['auth_token'])
    op.create_unique_constraint('ux_user_email', 'user', ['email'])
    op.create_unique_constraint('ux_user_mobile', 'user', ['mobile'])
    op.create_unique_constraint('ux_user_username', 'user', ['username'])
    op.drop_constraint(u'ux_auth_token', 'user', type_='unique')
    op.drop_constraint(u'ux_email', 'user', type_='unique')
    op.drop_constraint(u'ux_mobile', 'user', type_='unique')
    op.drop_constraint(u'ux_username', 'user', type_='unique')
    op.alter_column('user_roles', 'role_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('user_roles', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    ### end Alembic commands ###


def downgrade():
    ### commands auto generated by Alembic - please adjust! ###
    op.alter_column('user_roles', 'user_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.alter_column('user_roles', 'role_id',
               existing_type=sa.INTEGER(),
               nullable=True)
    op.create_unique_constraint(u'ux_username', 'user', ['username'])
    op.create_unique_constraint(u'ux_mobile', 'user', ['mobile'])
    op.create_unique_constraint(u'ux_email', 'user', ['email'])
    op.create_unique_constraint(u'ux_auth_token', 'user', ['auth_token'])
    op.drop_constraint('ux_user_username', 'user', type_='unique')
    op.drop_constraint('ux_user_mobile', 'user', type_='unique')
    op.drop_constraint('ux_user_email', 'user', type_='unique')
    op.drop_constraint('ux_user_auth_token', 'user', type_='unique')
    op.drop_constraint('fk_topic_follow_user', 'topic_follow', type_='foreignkey')
    op.drop_constraint('fk_topic_follow_topic', 'topic_follow', type_='foreignkey')
    op.create_unique_constraint(u'ux_user_follow_topic', 'topic_follow', ['topic_id', 'user_id'])
    op.drop_constraint('ux_topic_follow_user_follow_topic', 'topic_follow', type_='unique')
    op.drop_constraint('fk_topic_user', 'topic', type_='foreignkey')
    op.add_column('link_tag', sa.Column('weight', sa.INTEGER(), autoincrement=False, nullable=False))
    op.add_column('link_tag', sa.Column('id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'link_tag', type_='foreignkey')
    op.drop_constraint(None, 'link_tag', type_='foreignkey')
    op.create_unique_constraint(u'ux_link_tag', 'link_tag', ['tag_id', 'link_id'])
    op.create_index('ix_link', 'link_tag', ['link_id'], unique=False)
    op.alter_column('link_tag', 'tag_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('link_tag', 'link_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.add_column('link_ad', sa.Column('weight', sa.NUMERIC(precision=5, scale=2), server_default=sa.text(u'0::numeric'), autoincrement=False, nullable=False))
    op.add_column('link_ad', sa.Column('id', sa.INTEGER(), nullable=False))
    op.drop_constraint(None, 'link_ad', type_='foreignkey')
    op.drop_constraint(None, 'link_ad', type_='foreignkey')
    op.create_unique_constraint(u'ux_link_ad', 'link_ad', ['link_id', 'ad_id'])
    op.create_index('ix_link_weight', 'link_ad', ['link_id', 'weight'], unique=False)
    op.alter_column('link_ad', 'link_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.alter_column('link_ad', 'ad_id',
               existing_type=sa.INTEGER(),
               nullable=False)
    op.drop_constraint('fk_link_user', 'link', type_='foreignkey')
    op.drop_constraint('fk_link_issue', 'link', type_='foreignkey')
    op.drop_index('ix_issue', table_name='link')
    op.drop_constraint('fk_issue_user', 'issue', type_='foreignkey')
    op.drop_constraint('fk_issue_topic', 'issue', type_='foreignkey')
    op.create_unique_constraint(u'ux_topic_serial', 'issue', ['topic_id', 'serial'])
    op.drop_constraint('ux_issue_topic_serial', 'issue', type_='unique')
    op.create_unique_constraint(u'ux_ad_asin', 'ad', ['asin'])
    op.drop_constraint('ix_ad_asin', 'ad', type_='unique')
    op.create_table('user_invitation',
    sa.Column('id', sa.INTEGER(), nullable=False),
    sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    sa.Column('invited_by_user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    sa.Column('token', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=True),
    sa.PrimaryKeyConstraint('id', name=u'user_invitation_pkey'),
    sa.UniqueConstraint('email', name=u'ux_user_invitation_email'),
    sa.UniqueConstraint('token', name=u'ux_user_invitation_token')
    )
    op.drop_table('user_invite')
    ### end Alembic commands ###
